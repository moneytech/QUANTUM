// =============================================================================
// <integer/convert/decimal/consts.h>
//
// Power of ten lookup tables.
//
// Copyright Kristian Garn√©t.
// -----------------------------------------------------------------------------

#ifndef H_E654371A7C044EA3B51FBB8B5FD59E5F
#define H_E654371A7C044EA3B51FBB8B5FD59E5F

// -----------------------------------------------------------------------------

static const ul8 i8_pow10_tbl[3] =
{
  1u,
  10u,
  100u
};

static const ul16 i16_pow10_tbl[5] =
{
  1u,
  10u,
  100u,
  1000u,
  10000u
};

static const ul32 i32_pow10_tbl[10] =
{
  1u,
  10u,
  100u,
  1000u,
  10000u,
  100000u,
  1000000u,
  10000000u,
  100000000u,
  1000000000u
};

static const ul64 i64_pow10_tbl[20] =
{
  1u,
  10u,
  100u,
  1000u,
  10000u,
  100000u,
  1000000u,
  10000000u,
  100000000u,
  1000000000u,
  10000000000u,
  100000000000u,
  1000000000000u,
  10000000000000u,
  100000000000000u,
  1000000000000000u,
  10000000000000000u,
  100000000000000000u,
  1000000000000000000u,
  10000000000000000000u
};

#if HAVE(INT_LEAST128)
static const ul128 i128_pow10_tbl[39] =
{
  ((ul128)1u),
  ((ul128)10u),
  ((ul128)100u),
  ((ul128)1000u),
  ((ul128)10000u),
  ((ul128)100000u),
  ((ul128)1000000u),
  ((ul128)10000000u),
  ((ul128)100000000u),
  ((ul128)1000000000u),
  ((ul128)10000000000u),
  ((ul128)100000000000u),
  ((ul128)1000000000000u),
  ((ul128)10000000000000u),
  ((ul128)100000000000000u),
  ((ul128)1000000000000000u),
  ((ul128)10000000000000000u),
  ((ul128)100000000000000000u),
  ((ul128)1000000000000000000u),
  ((ul128)10000000000000000000u),
  ((ul128)10000000000000000000u) * 10u,
  ((ul128)10000000000000000000u) * 100u,
  ((ul128)10000000000000000000u) * 1000u,
  ((ul128)10000000000000000000u) * 10000u,
  ((ul128)10000000000000000000u) * 100000u,
  ((ul128)10000000000000000000u) * 1000000u,
  ((ul128)10000000000000000000u) * 10000000u,
  ((ul128)10000000000000000000u) * 100000000u,
  ((ul128)10000000000000000000u) * 1000000000u,
  ((ul128)10000000000000000000u) * 10000000000u,
  ((ul128)10000000000000000000u) * 100000000000u,
  ((ul128)10000000000000000000u) * 1000000000000u,
  ((ul128)10000000000000000000u) * 10000000000000u,
  ((ul128)10000000000000000000u) * 100000000000000u,
  ((ul128)10000000000000000000u) * 1000000000000000u,
  ((ul128)10000000000000000000u) * 10000000000000000u,
  ((ul128)10000000000000000000u) * 100000000000000000u,
  ((ul128)10000000000000000000u) * 1000000000000000000u,
  ((ul128)10000000000000000000u) * 10000000000000000000u
};
#endif

// -----------------------------------------------------------------------------

#endif
